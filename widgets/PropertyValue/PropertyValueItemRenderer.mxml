<?xml version="1.0" encoding="utf-8"?>
<!--
 | Version 10.1.1
 | Copyright 2010 Esri
 |
 | Licensed under the Apache License, Version 2.0 (the "License");
 | you may not use this file except in compliance with the License.
 | You may obtain a copy of the License at
 |
 |    http://www.apache.org/licenses/LICENSE-2.0
 |
 | Unless required by applicable law or agreed to in writing, software
 | distributed under the License is distributed on an "AS IS" BASIS,
 | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 | See the License for the specific language governing permissions and
 | limitations under the License.
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:mx="library://ns.adobe.com/flex/mx"
                autoDrawBackground="false"
                buttonMode="true"
                click="itemrenderer_clickHandler(event)"
                dataChange="itemrenderer_dataChangeHandler(event)"
                minHeight="30"
                useHandCursor="true">

    <fx:Script>
        <![CDATA[
            import mx.events.FlexEvent;

            import spark.components.RadioButtonGroup;

            private const THEME_CLICK:String = "themeClick";

            [Bindable]
            private var title:String;

            [Bindable]
            private var grp:spark.components.RadioButtonGroup;

            [Bindable]
            private var radioSelected:Boolean;

            private function itemrenderer_dataChangeHandler(event:FlexEvent):void
            {
                if (data)
                {
                    title = data.labelref;
                    grp = data.themeType;
                    radioSelected = data.visible;
                }
            }

            private function itemrenderer_clickHandler(event:MouseEvent):void
            {
                if (event.target is PropertyValueItemRenderer)
                {
                    PropertyValueItemRenderer(event.target).themeRadio.selected = true;
                }
                dispatchEvent(new Event(THEME_CLICK, true)); // bubbles
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="hovered"/>
    </s:states>

    <!-- border -->
    <s:Rect left="0" right="10" top="0" bottom="0"
            radiusX="4"
            radiusY="4">
        <s:stroke>
            <s:SolidColorStroke alpha="{getStyle('borderAlpha')}"
                                color="{getStyle('borderColor')}"
                                weight="1"/>
        </s:stroke>
    </s:Rect>

    <!-- background fill -->
    <s:Rect left="1" right="11" top="1" bottom="1"
            radiusX="4"
            radiusY="4">
        <s:fill>
            <s:SolidColor alpha="0.3"
                          alpha.hovered="0.8"
                          color.hovered="{getStyle('rollOverColor')}"
                          color.normal="{getStyle('contentBackgroundColor')}"/>
        </s:fill>
    </s:Rect>

    <s:RadioButton id="themeRadio"
                   left="30" right="40"
                   fontWeight="normal"
                   group="{grp}"
                   label="{title}"
                   selected="{radioSelected}"
                   verticalCenter="0"/>

</s:ItemRenderer>
